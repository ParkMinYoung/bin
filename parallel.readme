man parallel_tutorial
 
(wget -O - pi.dk/3 || curl pi.dk/3/ || fetch -o - http://pi.dk/3) | bash



parallel echo job {#} of {= '$_=total_jobs()' =} {1} {2} {-2} ::: A B C ::: D E F

# excute time : 2017-11-01 10:37:24 : abc-file

  parallel -k echo ::: A B C > abc-file



#The file can be generated by this command:

  parallel -k echo ::: D E F > def-file
#abc0-file:
#The file can be generated by this command:

  perl -e 'printf "A\0B\0C\0"' > abc0-file
#abc_-file:
#The file can be generated by this command:

  perl -e 'printf "A_B_C_"' > abc_-file
#tsv-file.tsv
#The file can be generated by this command:

  perl -e 'printf "f1\tf2\nA\tB\nC\tD\n"' > tsv-file.tsv
#num8
#The file can be generated by this command:

  perl -e 'for(1..8){print "$_\n"}' > num8
#num128
#The file can be generated by this command:

  perl -e 'for(1..128){print "$_\n"}' > num128
#num30000
#The file can be generated by this command:

  perl -e 'for(1..30000){print "$_\n"}' > num30000
#num1000000
#The file can be generated by this command:

  perl -e 'for(1..1000000){print "$_\n"}' > num1000000
#num_%header
#The file can be generated by this command:

  (echo %head1; echo %head2; \
   perl -e 'for(1..10){print "$_\n"}') > num_%header
#fixedlen
#The file can be generated by this command:

  perl -e 'print "HHHHAAABBBCCC"' > fixedlen
#For remote running: ssh login on 2 servers with no password in $SERVER1 and $SERVER2 must work.
#  SERVER1=server.example.com
#  SERVER2=server2.example.net
#So you must be able to do this:

#  ssh $SERVER1 echo works
#  ssh $SERVER2 echo works
#It can be setup by running 'ssh-keygen -t dsa; ssh-copy-id $SERVER1' and using an empty pass phrase.



# excute time : 2017-11-01 10:36:38 : echo
parallel echo ::: A B C 


# excute time : 2017-11-01 10:40:08 : abc
 parallel -a abc-file echo


# excute time : 2017-11-01 10:40:20 : abc
  cat abc-file | parallel echo


# excute time : 2017-11-01 10:40:32 : multi
parallel echo ::: A B C ::: D E F


# excute time : 2017-11-01 10:40:49 : multi
  parallel -a abc-file -a def-file echo


# excute time : 2017-11-01 10:41:01 : multi
  cat abc-file | parallel -a - -a def-file echo


# excute time : 2017-11-01 10:41:14 : multi
 parallel echo ::: A B C :::: def-file


# excute time : 2017-11-01 10:41:33 : link
 parallel --link echo ::: A B C ::: D E F


# excute time : 2017-11-01 10:41:53 : link
  parallel --link echo ::: A B C D E ::: F G




